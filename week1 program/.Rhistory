t1<-as_tibble(m2)
v <-c(1:7)
## Do not modify this line! ## Write your code for 2. after this line! ##
outer_prod1 <-outer(v,v,"*")
## Do not modify this line! ## Write your code for 3. after this line! ##
m2 <-outer_prod1
m2[lower.tri(m2)] <- (-1)*lower.tri(m2)
## Do not modify this line! ## Write your code for 4. after this line! ##
t1<-as_tibble(m2)
View(outer_prod1)
View(m2)
View(outer_prod1)
m2[lower.tri(m2)] <- lower.tri(m2)
View(m2)
lower.tri(m2)
m2<-m2[ifelse(lower.tri(m2),m2*-1,m2)]
m2<-(ifelse(lower.tri(m2),m2*-1,m2)
View(m2)
m2
m2<-(ifelse(lower.tri(m2),m2,m2)
m2
m2
m2
m2 <-(ifelse(lower.tri(m2),m2*-1,m2))
m2
m2 <-(ifelse(lowerTriangle(m2),m2*-1,m2))
m2
m2 <-(ifelse(lowerTriangle(m2),m2*-1,m2))
m2
m2 <-(ifelse(lowerTriangle(m2),m2*-1,m2))
m2
m2 <-(ifelse(lowerTriangle(m2),m2*-1,m2))
m2
X <- diag(outer_prod1)
X[upper.tri(X, diag=TRUE)] <- elements
X <- X + t(X) - diag(diag(X))
View(X)
X <- diag(outer_prod1)
X[upper.tri(X, diag=TRUE)] <- elements
m2 <-outer_prod1
for ( i in 2:nrow(m2) ) {
m2[i, 1:(i-1)]<-m2[i, 1:(i-1)]*-1}
m2
View(m2)
## Do not modify this line! ## Write your code for 4. after this line! ##
t1<-as_tibble(m2)
View(t1)
## Do not modify this line! ## Write your code for 5. after this line! ##
t1 <- rename(t1, replace = c(v1=a))
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
t1 <-tibble(OriginalNumericVar = 1:3
,Original.Character.Var = c('A', 'B', 'Z'))
View(t1)
## Do not modify this line! ## Write your code for 4. after this line! ##
t1<-as_tibble(m2)
View(t1)
View(t1)
## Do not modify this line! ## Write your code for 5. after this line! ##
t1 <-tibble(t1,V1=A)
## Do not modify this line! ## Write your code for 5. after this line! ##
t1 <-tibble(t1,V1='A')
View(t1)
## Do not modify this line! ## Write your code for 4. after this line! ##
t1<-as_tibble(m2)
## Do not modify this line! ## Write your code for 5. after this line! ##
t1 <-tibble(t1,'V1'='A')
View(t1)
## Do not modify this line! ## Write your code for 4. after this line! ##
t1<-as_tibble(m2)
View(t1)
## Do not modify this line! ## Write your code for 5. after this line! ##
t1 <- rename(t1, replace = c("V1" = "a"))
t1 <- rename(t1, replace = c("V1" = "a"))
t1 <- rename(t1, replace = c("V1" = "a"))
t1 <- rename(t1, replace = c("V1" = "a"))
library(plyr)
rename(t1, c("v1"="a", "v2"="b"))
## Do not modify this line! ## Write your code for 5. after this line! ##
colnames(t1)<-c('a','b','c','d','e','f','g')
View(t1)
# HW1: tibble4
library(tibble)
# 1. Consider the data frame `airquality`. Convert it into a tibble `t1`.
# 2. Calculate the total number of 'NA' for each variable and summarize it into a vector `v1`.
#    Make sure the vector has the same names as the column names of `t1`.
# 3. Omit all rows which have 'NA' values and assign it to `t2`.
# 4. Sort the new data frame `t2` by column Temp(ascending) and then by column Ozone(ascending). Assign it to `t3`.(hint: check the order function)
## Do not modify this line! ## Write your code for 1. after this line! ##
t1 <- tibble(airquality)
## Do not modify this line! ## Write your code for 2. after this line! ##
## Do not modify this line! ## Write your code for 2. after this line! ##
v1 <-colSums(is.na(t1))
v1
v2<-v1
v2[complete.cases(v2)]
## Do not modify this line! ## Write your code for 3. after this line! ##
v2<-t1
v2[complete.cases(v2)]
v2[complete.cases(v2,)]
## Do not modify this line! ## Write your code for 3. after this line! ##
v2<-t1
v3<-na.omit(v2)
View(v3)
v3<-v2[!complete.cases(v2)]
v3<-na.omit(v2)
View(v3)
v3<-drop_na(v2)
library(dplyr)
v3<-drop_na(v2)
## Do not modify this line! ## Write your code for 3. after this line! ##
v2<- v1[complete.cases(v1)]
v2
v2<- t1[complete.cases(t1)]
v2
## Do not modify this line! ## Write your code for 3. after this line! ##
v2<- t1[complete.cases(t1)]
t1
t1
## Do not modify this line! ## Write your code for 3. after this line! ##
complete.cases(t1)
## Do not modify this line! ## Write your code for 1. after this line! ##
t1 <- tibble(airquality)
## Do not modify this line! ## Write your code for 3. after this line! ##
complete.cases(t1)
# HW1: tibble4
library(tibble)
# 1. Consider the data frame `airquality`. Convert it into a tibble `t1`.
# 2. Calculate the total number of 'NA' for each variable and summarize it into a vector `v1`.
#    Make sure the vector has the same names as the column names of `t1`.
# 3. Omit all rows which have 'NA' values and assign it to `t2`.
# 4. Sort the new data frame `t2` by column Temp(ascending) and then by column Ozone(ascending). Assign it to `t3`.(hint: check the order function)
## Do not modify this line! ## Write your code for 1. after this line! ##
t1 <- tibble(airquality)
## Do not modify this line! ## Write your code for 2. after this line! ##
v1 <-colSums(is.na(t1))
## Do not modify this line! ## Write your code for 3. after this line! ##
## Do not modify this line! ## Write your code for 3. after this line! ##
complete.cases(t1)
## Do not modify this line! ## Write your code for 3. after this line! ##
complete.cases(t1,)
## Do not modify this line! ## Write your code for 3. after this line! ##
complete.cases(t1[,])
## Do not modify this line! ## Write your code for 3. after this line! ##
complete.cases(airquality)
t2<-airquality[complete.cases(airquality),]
View(t2)
t2<-tibble(v2)
v2<-airquality[complete.cases(airquality),]
t2<-tibble(v2)
View(t1)
View(v2)
## Do not modify this line! ## Write your code for 4. after this line! ##
t21 <-t2[order(Temp,decreasing = FALSE)]
## Do not modify this line! ## Write your code for 4. after this line! ##
t21 <-v2[order(Temp,decreasing = FALSE)]
View(v2)
## Do not modify this line! ## Write your code for 4. after this line! ##
t21 <-v2[order("Temp",decreasing = FALSE)]
View(t21)
View(v2)
## Do not modify this line! ## Write your code for 4. after this line! ##
t21 <-v2[order(Temp)]
View(t21)
View(v2)
# HW1: tibble4
library(tibble)
# 1. Consider the data frame `airquality`. Convert it into a tibble `t1`.
# 2. Calculate the total number of 'NA' for each variable and summarize it into a vector `v1`.
#    Make sure the vector has the same names as the column names of `t1`.
# 3. Omit all rows which have 'NA' values and assign it to `t2`.
# 4. Sort the new data frame `t2` by column Temp(ascending) and then by column Ozone(ascending). Assign it to `t3`.(hint: check the order function)
## Do not modify this line! ## Write your code for 1. after this line! ##
t1 <- tibble(airquality)
## Do not modify this line! ## Write your code for 2. after this line! ##
v1 <-colSums(is.na(t1))
## Do not modify this line! ## Write your code for 3. after this line! ##
complete.cases(airquality)
v2<-airquality[complete.cases(airquality),]
t2<-tibble(v2)
## Do not modify this line! ## Write your code for 4. after this line! ##
t21 <-v2[order(v2.Temp)]
## Do not modify this line! ## Write your code for 4. after this line! ##
t21 <-v2[order(v2)]
## Do not modify this line! ## Write your code for 4. after this line! ##
t21 <-v2[with(v2,order("Temp")),]
View(t21)
## Do not modify this line! ## Write your code for 4. after this line! ##
t21 <-v2[with(v2,order("Temp"))]
View(t21)
## Do not modify this line! ## Write your code for 4. after this line! ##
t2 <-data.frame(airquality)
View(t2)
View(t2)
t2<v2
t2<-v2
t2<-v2
## Do not modify this line! ## Write your code for 4. after this line! ##
t2[with(t2,order("Temp")),]
t2
## Do not modify this line! ## Write your code for 4. after this line! ##
t2 <-t2[with(t2,order("Temp")),]
View(t2)
## Do not modify this line! ## Write your code for 4. after this line! ##
t2 <-t2[order(Temp),]
## Do not modify this line! ## Write your code for 4. after this line! ##
t2 <-t2[order("Temp"),]
View(t2)
t2<-v2
## Do not modify this line! ## Write your code for 4. after this line! ##
t2 <-t2[order("Temp"),]
t2<-v2
## Do not modify this line! ## Write your code for 4. after this line! ##
t2 <-t2[order("Temp")]
View(t2)
t2<-v2
## Do not modify this line! ## Write your code for 4. after this line! ##
t2 <-t2[order(t2$"Temp"),]
View(t2)
t2<-t2[order(-t2$"Ozone"),]
View(t2)
t3<-t2
# HW1: data frames and tibbles
library(tibble)
## Do not modify this line! ## Write your code for 1. after this line! ##
t1 <- as_tibble(mtcars)
## Do not modify this line! ## Write your code for 1. after this line! ##
t1 <- as_tibble(mtcars)
View(t1)
## Do not modify this line! ## Write your code for 2. after this line! ##
t2 <- t1[mpg>18]
## Do not modify this line! ## Write your code for 2. after this line! ##
t2 <- t1['mpg'>18]
View(t2)
## Do not modify this line! ## Write your code for 2. after this line! ##
t2 <- t1['mpg'>18]
View(t2)
## Do not modify this line! ## Write your code for 2. after this line! ##
t1[which(t1$mpg>4),]
## Do not modify this line! ## Write your code for 2. after this line! ##
t1[which(t1$mpg>18),]
## Do not modify this line! ## Write your code for 2. after this line! ##
t2 <-t1[which(t1$mpg>18),]
View(t2)
## Do not modify this line! ## Write your code for 3. after this line! ##
t3 <-lapply(t2, as.integer)
View(t3)
t3 <-as_tibble(t31)
t31 <-lapply(t2, as.integer)
t3 <-as_tibble(t31)
View(t3)
t4<- transform(t3,vsam = vs+am)
View(t4)
View(t4)
t4<- data[c(12,1,2,3,4,5,6,7,8,9,10,11)]
t4<- t4[c(12,1,2,3,4,5,6,7,8,9,10,11)]
View(t4)
t4<- as_tibble(t4)
## Do not modify this line! ## Write your code for 1. after this line! ##
t1 <- as_tibble(mtcars)
## Do not modify this line! ## Write your code for 2. after this line! ##
t2 <- t1[!"drat"]
View(t1)
## Do not modify this line! ## Write your code for 2. after this line! ##
t2 <- t1[,c(-5,-9)]
View(t2)
## Do not modify this line! ## Write your code for 3. after this line! ##
t3 <-which(t2$mpg=t2$qsec)
View(t2)
## Do not modify this line! ## Write your code for 3. after this line! ##
t3 <-t2[,c(6,2,3,4,5,1,7,8,9)]
View(t3)
## Do not modify this line! ## Write your code for 4. after this line! ##
t4 <- order(t3$qsec)[1:10]
t4
## Do not modify this line! ## Write your code for 4. after this line! ##
t4 <- order(t3$qsec)
t4<- t3[order(t3$qsec),]
View(t4)
## Do not modify this line! ## Write your code for 4. after this line! ##
t4<- t3[order(t3$qsec),][1:10]
t4<-t4[1:10,]
View(t4)
m1<-outer(a,b,max)
a <-c(1:10)
b <-c(1:10)
m1<-outer(a,b,max)
a <-c(1:10)
b <-c(1:10)
m1<-outer(a,b,max())
a <-c(1:10)
b <-c(1:10)
m1<-outer(a,b,max(a,b))
a <-c(1:10)
b <-c(1:10)
f <-function(x,y){max(x,y)}
m1<-outer(a,b,f)
a <-c(1:10)
b <-c(1:10)
f <-function(x,y){max(x,y)}
m1<-outer(a,b,f)
a <-c(1:10)
b <-c(1:10)
f <-function(x,y){max(c(x,y))}
m1<-outer(a,b,f)
a <-c(1:10)
b <-c(1:10)
f <-function(x,y){max(c(x,y))}
m1<-outer(a,b,f)
a <-c(1:10)
b <-c(1:10)
m1<-outer(a,b,f=max(c(a.b)))
a <-c(1:10)
b <-c(1:10)
m1<-outer(a,b,f="*")
a <-c(1:10)
b <-c(1:10)
m1<-outer(a,b,"*")
View(m1)
m1<-outer(a,b,"max(c(a,b))")
m1<-outer(a,b,max())
m1<-outer(a,b,max())
f=function(x,y){max(x,y)}
m1<-outer(a,b,f)
View(m1)
a <-c(1:10)
b <-c(1:10)
f <-function(x,y){max(x,y)}
m1<-outer(a,b,f)
f <-function(x,y){max(c(x,y))}
a <-c(1:10)
b <-c(1:10)
f <-function(x,y){max(c(x,y))}
m1<-outer(a,b,f)
m1<-outer(a,b,"*")
View(m1)
f(a,b)
f(a,b)
f <-function(x,y){max(x,y)}
f(a,b)
f(c(a,b))
f <-function(c(x,y)){max(c(x,y))}
f <-function(x,y){ifelse(x>=y,x,y)}
a <-c(1:10)
b <-c(1:10)
f <-function(x,y){ifelse(x>=y,x,y)}
m1 <-outer(a,b,f)
View(m1)
a <-c(1:10)
b <-c(1:10)
f <-function(x,y){ifelse(x<=y,x,y)}
m2 <-outer(a,b,f)
## Do not modify this line! ## Write your code for 3. after this line! ##
a1 <-array(c(m1,m2),dim = c(10,10,2))
a <-c(1:10)
b <-c(1:10)
f <-function(x,y){ifelse(x>=y,x,y)}
m1 <-outer(a,b,f)
## Do not modify this line! ## Write your code for 2. after this line! ##
a <-c(1:10)
b <-c(1:10)
f <-function(x,y){ifelse(x<=y,x,y)}
m2 <-outer(a,b,f)
## Do not modify this line! ## Write your code for 3. after this line! ##
a1 <-array(c(m1,m2),dim = c(10,10,2))
a1
## Do not modify this line! ## Write your code for 4. after this line! ##
m3 <-apply(c(m1,m2),2,sum)
## Do not modify this line! ## Write your code for 4. after this line! ##
m3 <-apply(m1,2,sum)
m3
m32 <-apply(m2,2,sum)
m32
m3 <-matrix(c(m31,m32),nrow = 10, ncol=2)
m31 <-apply(m1,2,sum)
m32 <-apply(m2,2,sum)
m3 <-matrix(c(m31,m32),nrow = 10, ncol=2)
View(m3)
## Do not modify this line! ## Write your code for 1. after this line! ##
l1 <-list(a:z)
## Do not modify this line! ## Write your code for 1. after this line! ##
l1 <-list("a":"z")
## Do not modify this line! ## Write your code for 1. after this line! ##
l1 <-list("a","z")
View(l1)
## Do not modify this line! ## Write your code for 1. after this line! ##
l1 <-list("a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z")
## Do not modify this line! ## Write your code for 2. after this line! ##
l2 <-list(1:26)
View(l2)
## Do not modify this line! ## Write your code for 2. after this line! ##
l2 <-list(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26)
## Do not modify this line! ## Write your code for 3. after this line! ##
l3 <-list(l1,l2)
## Do not modify this line! ## Write your code for 4. after this line! ##
l4 <-list(c(l1,l2))
View(l4)
l4
View(l4)
## Do not modify this line! ## Write your code for 4. after this line! ##
merged.list <- c(l1,l2)
## Do not modify this line! ## Write your code for 4. after this line! ##
l4 <- c(l1,l2)
l1 <-c(l11,l12)
l11 <-list("a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z")
l12 <-list("A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z")
l1 <-c(l11,l12)
## Do not modify this line! ## Write your code for 2. after this line! ##
l21 <-list("a","b","c","d","e","f","g","h","i","j","k","l","m")
l22 <-list("n","o","p","q","r","s","t","u","v","w","x","y","z")
l2 <-list(l21,l22,l23,l24)
l21 <-list("a","b","c","d","e","f","g","h","i","j","k","l","m")
l22 <-list("n","o","p","q","r","s","t","u","v","w","x","y","z")
l23 <-list("A","B","C","D","E","F","G","H","I","J","K","L","M")
l24 <-list("N","O","P","Q","R","S","T","U","V","W","X","Y","Z")
l2 <-list(l21,l22,l23,l24)
View(l2)
## Do not modify this line! ## Write your code for 3. after this line! ##
x1 <-unlist(l1)
x1
x2 <-unlist(l1, use.names=FALSE)
x1
x2
x1<vector(x1)
x1<as.vector(x1)
## Do not modify this line! ## Write your code for 3. after this line! ##
x1 <-unlist(l1,use.names=T)
## Do not modify this line! ## Write your code for 3. after this line! ##
x1 <-unlist(l1,use.names=TRUE)
l2 <-matrix(c(l21,l22,l23,l24))
View(l2)
l2 <-matrix(c(l21,l22,l23,l24),ncol = 13,nrow = 4)
## Do not modify this line! ## Write your code for 1. after this line! ##
alphat <- c(letters)
f1 <- c(alphat, ordered = TRUE, levels = alphat)
alphat <- c(letters)
f1 <- c(alphat, ordered = TRUE, levels = alphat)
f1
## Do not modify this line! ## Write your code for 2. after this line! ##
f2 <-fct_rev(f1)
library(tidyverse)
## Do not modify this line! ## Write your code for 2. after this line! ##
f2 <-fct_rev(f1)
f2 <-fct_rev(f1)
f2
## Do not modify this line! ## Write your code for 2. after this line! ##
f2 <-reverse.levels(f1)
## Do not modify this line! ## Write your code for 2. after this line! ##
f2 <-rev(f1)
na <-c(NA,NA,NA,NA)
f3 <append(f1,na)
na <-c(NA,NA,NA,NA)
f3 <- append(f1,na)
f3
f3 <-c(f3,ordered = TRUE,levels =f3)
f3
na <-c(NA,NA,NA,NA)
f3 <- append(f1,na)
f3 <-c(f3,ordered = TRUE)
f3
f3 <- append(f1,na)
f3 <- append(f1,na)
f3
f3 <- factor(append(as.character(f1),na))
f3 <- factor(append(as.character(f1),na))
f3
f3 <- factor(append(f1,na))
f3 <- factor(append(f1,na))
f3 <- factor(append(f1,na))
f3 <- factor(append(f1,na),)
f3 <- factor(append(f1,na))
f3
f1 <- factor(alphat, ordered = TRUE, levels = alphat)
## Do not modify this line! ## Write your code for 2. after this line! ##
f2 <-rev(f1)
f3 <- factor(append(f1,na))
na <-c(NA,NA,NA,NA)
f3 <- factor(append(f1,na))
f3
na <-c(NA,NA,NA,NA)
f3 <- factor(append(f1,na))
levels(f3) <-c(levels(f3),NA)
f3[27] <-NA
f3
na <-c(NA,NA,NA,NA)
f3 <- factor(append(f1,na))
## Do not modify this line! ## Write your code for 3. after this line! ##
f3<-f1
f3<-f1
levels(f3) <-c(levels(f3),NA)
f3[27] <-NA
f3
levels(f3) <-c(levels(f3),"NA")
f3[27] <-"NA"
f3
na <-c("NA","NA","NA","NA")
levels(f3) <-c(levels(f3),na)
levels(f3) <-c(levels(f3),na)
f3[27] <-"NA"
f3
levels(f3) <-c(levels(f3),c("NA","NA","NA","NA"))
f3<-f1
f3<append(f3,c("NA","NA","NA","NA"))
levels(f3) <-c(levels(f3),"NA")
f3[27] <-"NA"
f3
f3<-f1
f3<append(f3,c("NA","NA","NA","NA"))
levels(f3) <-c(levels(f3),"NA")
f3[27] <-"NA"
f3
